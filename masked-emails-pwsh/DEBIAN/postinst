#!/bin/sh

ln -s /usr/share/masked-emails/add-masked-email.ps1 /usr/local/bin/add-masked-email
ln -s /usr/share/masked-emails/forward-masked-email.ps1 /usr/local/bin/forward-masked-email
ln -s /usr/share/masked-emails/forward-masked-emails.ps1 /usr/local/bin/forward-masked-emails
ln -s /usr/share/masked-emails/get-masked-emails.ps1 /usr/local/bin/get-masked-emails
ln -s /usr/share/masked-emails/purge-masked-emails.ps1 /usr/local/bin/purge-masked-emails
ln -s /usr/share/masked-emails/remove-masked-email.ps1 /usr/local/bin/remove-masked-email
ln -s /usr/share/masked-emails/set-masked-email-forwarding.ps1 /usr/local/bin/set-masked-email
ln -s /usr/share/masked-emails/set-masked-email-password.ps1 /usr/local/bin/change-masked-email-password
ln -s /usr/share/masked-emails/send-email.ps1 /usr/local/bin/send-email

crontab -u root - <<EOF
# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
@hourly                  rm /tmp/CoreFxPipe_*
@hourly                  rm /tmp/clr\-debug\-pipe*
@hourly                  rm /tmp/dotnet\-diagnostic\-*
EOF
